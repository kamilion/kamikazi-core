        ## SLLabs Nginx Secret Sauce
        ## This will override previously definied settings in nginx.conf
        ## But you should probably remove them anyway to prevent nginx from bitching on -t.

        ## Handling of IPs in proxied and load balancing situations.
        set_real_ip_from        0.0.0.0/32; # all addresses get a real IP.
        real_ip_header     X-Forwarded-For; # the ip is forwarded from the load balancer
        ## We will take the rightmost from X-Forwarded-For, and pass it on.

        ### force timeouts if one of backend is died ##
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

        ### Set Proxy headers ####
        proxy_set_header        Accept-Encoding   "";
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

        ### Most PHP, Python, Rails, Java App can use this header to figure out if the frontend is https. ###
        proxy_set_header        X-Forwarded-Proto $scheme;

        ### By default we don't want to redirect it ####
        proxy_redirect     off;


        ## Define a zone for limiting the number of simultaneous
        ## connections nginx accepts. 1m means 3200 simultaneous
        ## sessions. We need to define for each server the limit_conn
        ## value refering to this or other zones.
        #limit_zone arbeit $binary_remote_addr 1m;

        ## Timeouts.
        client_body_timeout             60;
        client_header_timeout           60;
        # Huh, ubuntu 13.04/nginx 1.4.1 seems to have added this to nginx.conf.
        #keepalive_timeout            10 10;
        send_timeout                    60;

        ## Reset lingering timed out connections. Deflect DDoS.
        reset_timedout_connection on;

        ## Body size.
        client_max_body_size 100m;

        ## Compression.
        gzip_buffers      16 8k;
        gzip_comp_level   1;
        gzip_http_version 1.1;
        gzip_min_length   10;
        gzip_types        text/plain text/css application/x-javascript text/xml
        gzip_vary         on;
        gzip_proxied      any; # Compression for all requests.

        ## Serve already compressed files directly, bypassing on-the-fly
        ## compression.
        gzip_static on;

        # Protect against the BEAST attack by preferring RC4-SHA when using SSLv3 and TLS protocols.
        # Note that TLSv1.1 and TLSv1.2 are immune to the beast attack but only work with OpenSSL v1.0.1 and higher and has limited client support.
        #ssl_protocols              SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        #ssl_ciphers                RC4:HIGH:!aNULL:!MD5;
        #ssl_prefer_server_ciphers  on;

        # Optimize SSL by caching session parameters for 10 minutes. This cuts down on the number of expensive SSL handshakes.
        # The handshake is the most CPU-intensive operation, and by default it is re-negotiated on every new/parallel connection.
        # By enabling a cache (of type "shared between all Nginx workers"), we tell the client to re-use the already negotiated state.
        # Further optimization can be achieved by raising keepalive_timeout, but that shouldn't be done unless you serve primarily HTTPS.
        ssl_session_cache    shared:SSL:10m; # a 1mb cache can hold about 4000 sessions, so we can hold 40000 sessions
        ssl_session_timeout  10m;
        ## Use a SSL/TLS cache for SSL session resume. This needs to be
        ## here (in this context, for session resumption to work. See this
        ## thread on the Nginx mailing list:
        ## http://nginx.org/pipermail/nginx/2010-November/023736.html.



        # This default SSL certificate will be served whenever the client lacks support for SNI (Server Name Indication).
        # Make it a symlink to the most important certificate you have, so that users of IE 8 and below on WinXP can see your main site without SSL errors.
        #ssl_certificate      /etc/nginx/default_ssl.crt;
        #ssl_certificate_key  /etc/nginx/default_ssl.key;

        ## For the filefield_nginx_progress module to work. From the
        ## README. Reserve 1MB under the name 'uploads' to track uploads.
        #upload_progress uploads 1m;

        ## Enable clickjacking protection in modern browsers. Available in
        ## IE8 also. See
        ## https://developer.mozilla.org/en/The_X-FRAME-OPTIONS_response_header
        add_header X-Frame-Options sameorigin;

        ## Bigger buffers
        client_body_buffer_size 128k;

        ## Proxy Settings
        proxy_connect_timeout 90;
        proxy_send_timeout 180;
        proxy_read_timeout 180;
        proxy_buffer_size 16k;
        proxy_buffers 8 16k;
        proxy_busy_buffers_size 32k;
        proxy_intercept_errors on;
        ## FastCGI config
        fastcgi_connect_timeout 60;
        fastcgi_send_timeout 180;
        fastcgi_read_timeout 180;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_intercept_errors on;

        ## Pull in site specific configs
        include /home/git/*/resources/latest/config/http/*/*.conf;


