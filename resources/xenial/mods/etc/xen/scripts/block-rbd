#!/bin/bash -eu
#
# RBD Xen block device hotplug script
#
# Author Florian Heigl <florian.heigl AT gmail>
# Author Thomas Zelch  <thomaszelch AT gmail>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation; version 2.1 only. with the special
# exception on linking described in file LICENSE.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# Ph’nglui mglw’nafh Cthulhu R’lyeh wgah’nagl fhtagn.
#                       ___
#                    .-'   `'.
#                   /         \
#                   |         ;
#                   |         |           ___.--,
#          _.._     |0) ~ (0) |    _.---'`__.-( (_.
#   __.--'`_.. '.__.\    '--. \_.-' ,.--'`     `""`
#  ( ,.--'`   ',__ /./;   ;, '.__.'`    __
#  _`) )  .---.__.' / |   |\   \__..--""  """--.,_
# `---' .'.''-._.-'`_./  /\ '.  \ _.-~~~````~~~-._`-.__.'
#       | |  .' _.-' |  |  \  \  '.               `~---`
#        \ \/ .'     \  \   '. '-._)
#         \/ /        \  \    `=.__`~-.
#    jgs  / /\         `) )    / / `"".`\
#   , _.-'.'\ \        / /    ( (     / /
#    `--~`   ) )    .-'.'      '.'.  | (
#           (/`    ( (`          ) )  '-;
#            `      '-;         (-'
#
# Usage:
#
# Target should be specified using the following syntax:
#
# script=block-rbd,vdev=xvda,pool=rbd,image=image
#
# CephX authentication has to be set up in /etc/ceph/ceph.conf
#

# Mapping without RBD utility:
# http://cephnotes.ksperis.com/blog/2014/01/09/map-rbd-kernel-without-install-ceph-common


# hotplug has unhandled variables
# allow them while sourcing the other scripts
dir=$(dirname "$0")
set +u
. "$dir/block-common.sh"
set -u


check_tools()
{
    if ! [ -r /etc/ceph/ceph.conf ]; then
        fatal "Unable to find ceph configuration"
    fi
    if ! type rbd 2>&1 >/dev/null ; then
        fatal "Unable to find RBD binary"
    fi
    if ! lsmod | grep rbd >/dev/null ; then
        fatal "Unable to access RBD kernel module"
    fi
}


parse_target()
{
     pool=`echo $target | cut -f1 -d\:`
    image=`echo $target | cut -f2 -d\:`
    
    export pool image
}


add()
{
    if rbd --pool $pool list | grep $image >/dev/null ; then
       do_or_die rbd --pool $pool --image $image map
       
    else
       fatal "Uname to attach RBD pool: $pool image: $image"
    fi
    
    if ! [ -b /dev/rbd/$pool/$image ]; then
        fatal "Missing RBD device file /dev/rbd/$pool/$image"
    fi
}


# need to ensure this is the *last* VM accessing the rbd image?
remove()
{
    if [ -b /dev/rbd/$pool/$image ]; then
       do_or_die rbd unmap /dev/rbd/$pool/$image
    else
        fatal "Uname to detach RBD pool: $pool image: $image wasn't found"
    fi
}


command=$1
target=$(xenstore-read $XENBUS_PATH/params || true)
if [ -z "$target" ]; then
    fatal "No information about the target"
fi


parse_target
check_tools || exit 1


case $command in
add)
    add
    write_dev /dev/rbd/$pool/$image
    ;;
remove)
    remove
    ;;
*)
    exit 1
    ;;
esac
